@inject IJSRuntime js

<div>
    <h1>Componente Listado no ruteable</h1>
</div>

@*    <input type="checkbox" @onchange="@(() => MostrarBoton = !MostrarBoton)"/> Con funciones lambda*@
    <input type="checkbox" @bind="@(MostrarBoton)" />
    <span>Mostar Botones</span>
    <div>
        <h1>Ingresos</h1>
        <ListadoGenerico Listado="ingresos">
            <HayRegistros Context="ingresos">
                 <GastoIndividual 
                     Ingreso="ingresos" 
                     MostrarBoton="MostrarBoton"
                    EliminarIngreso="EliminarIngreso">
                 </GastoIndividual>
            </HayRegistros>
        </ListadoGenerico>
    </div>

@code {

    [Parameter]
    [EditorRequired]
    public List<Ingresos>? ingresos { get; set; }

    bool MostrarBoton = false;

    private async Task EliminarIngreso(Ingresos ingreso)
    {
        var confirmarEliminacion = await js.InvokeAsync<bool>("confirm",
                                            $"¿Desea borrar el ingreso {ingreso.descripcion} de la fecha {ingreso.fecha} ?");
        if (confirmarEliminacion)
        {
            Console.WriteLine($"Eliminando ingreso {ingreso.descripcion}");
            ingresos.Remove(ingreso);
        }
        
    }
}
